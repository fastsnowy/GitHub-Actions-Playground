name: Release Drafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
      
      - name: Generate CalVer version
        id: calver
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TZ: "Asia/Tokyo"
          VERSION_PREFIX: "v"
        run: |
          TODAY=$(date "+%Y.%m.%d")

          RELEASE_TAG=$(gh release --repo ${{github.repository}} view --json tagName --jq .tagName)
          if [ "${RELEASE_TAG}" = "" ]; then
            RELEASE_TAG="${TODAY}_0"
            echo "There is no release, use ${RELEASE_TAG}"
          fi

          TAGS=(${RELEASE_TAG//-/ })
          MAJOR_VERSION=${TAGS[0]}
          PATCH_VERSION=${TAGS[1]}

          PREFIX="${VERSION_PREFIX}${TODAY}"
          if [ "${MAJOR_VERSION}" = "${PREFIX}" ]; then
            PATCH_VERSION=$(expr ${PATCH_VERSION} + 1)
            echo "There is already a release for the same date, increment patch_version: ${PATCH_VERSION}"
          else
            PATCH_VERSION=1
          fi

          VERSION="${PREFIX}-${PATCH_VERSION}"

          echo ::set-output name=version::${VERSION}
          echo "Version set to ${VERSION}"

      - name: Draft Release
        id: create_release_notes
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.calver.outputs.version }}
          name: ${{ steps.calver.outputs.version }} ðŸš€
          version: ${{ steps.calver.outputs.version }}
          publish: true

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_notes.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/plain
